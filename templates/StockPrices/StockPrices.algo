[["#TemplateName#"],{"nodes":[{"id":"70e11a70-ec28-4252-8a86-001823cc7744","x":900.3828125,"y":61,"width":250,"color":"#00b300","font_color":"white","border_color":"black","can_remove":true,"label":"GUI","description":"","input":[{"name":"in","label":"Input","scopes":["a"],"id":"70e11a70-ec28-4252-8a86-001823cc7744-in"}],"output":[{"name":"out_true","label":"True","scopes":["a"],"id":"70e11a70-ec28-4252-8a86-001823cc7744-out_true"},{"name":"out_false","label":"False","scopes":["a"],"id":"70e11a70-ec28-4252-8a86-001823cc7744-out_false"}],"implementation":"ZenPython38","viewId":"Main","scope":"MainWorkflow","elementProperties":{"DEBUG":"0","PY_RESULT_TYPE":"1","PY_CLASS":"Gui","PY_FUNCT":"registerGui","PY_SCRIPT_TEXT":"import eel\nimport os\nimport algonia_helpers\nimport pandas as pd\nimport plotly&period;graph_objects as go\n# sys and webbrowser are needed for debug purposes\n# also pip install web_pdb\nimport sys\nimport webbrowser\n\nclass Gui:\n    # Constructor: called once per Algonia app life cycle\n    def __init__(self&comma; step):\n        dir_path = os&period;path&period;join(os&period;path&period;dirname(os&period;path&period;realpath(__file__))&comma;&apos;libs&apos;&comma;&apos;algonia&apos;&comma;&apos;html&apos;&comma;&apos;assets&apos;)\n        eel&period;init(dir_path)\n\n    @eel&period;expose\n    def getPricesRequest(symbol):\n        algonia_helpers&period;set_element_arg(&apos;SET_SYMBOL&apos;&comma;symbol)\n        algonia_helpers&period;exec(&apos;SET_SYMBOL&apos;)\n        eel&period;onGetPricesCompleted(&apos;&apos;)\n        return &apos;&apos;\n    \n    @eel&period;expose\n    def saveGraphRequest():\n        algonia_helpers&period;exec(&apos;SAVE_GRAPH&apos;)\n        res = algonia_helpers&period;get_result_raw(&apos;SAVE_GRAPH&apos;)\n        \n        eel&period;onSaveGraphCompleted(res)\n        return &apos;&apos;\n            \n    def registerGui(self):\n        eel&period;start(&apos;main&period;html&apos;)\n\t\t\n    # Algonia callback - return dynamic nodes\n    def registerExecNodes(self):\n        return &apos;SET_SYMBOL&comma;SAVE_GRAPH&apos;\n    #*******************************************************&quot;","PY_CONSTRUCTOR_ARG":"[{&quot;name&quot;:&quot;Property 1&quot;&comma;&quot;value&quot;:&quot;Prop 1 val&quot;&comma;&quot;description&quot;:&quot;description 1&quot;}&comma;{&quot;name&quot;:&quot;Property 2&quot;&comma;&quot;value&quot;:&quot;Prop 2 val&quot;&comma;&quot;description&quot;:&quot;description 2&quot;}]","PY_VERSION":"38","_LOOP_BLOCKER_":"1","__ARG__":""},"file":"ZenPython"},{"id":"7b119668-4c4e-42ed-b21a-e0d4ed4fa0cb","x":232,"y":62,"width":250,"color":"#00b300","font_color":"white","border_color":"black","can_remove":true,"label":"Start","description":"","input":[{"name":"in","label":"Input","scopes":["a"],"id":"7b119668-4c4e-42ed-b21a-e0d4ed4fa0cb-in"}],"output":[{"name":"out_true","label":"True","scopes":["a"],"id":"7b119668-4c4e-42ed-b21a-e0d4ed4fa0cb-out_true"},{"name":"out_false","label":"False","scopes":["a"],"id":"7b119668-4c4e-42ed-b21a-e0d4ed4fa0cb-out_false"}],"implementation":"ZenStart","viewId":"Main","scope":"MainWorkflow","elementProperties":{"REPEATABLE":"1","ACTIVE":"1"},"file":"ZenStart"},{"id":"30622c8d-88ef-41fe-bc37-ba7ac6e39cb0","x":705.6875,"y":188,"width":250,"color":"#00b300","font_color":"white","border_color":"black","can_remove":true,"label":"GET_PRICES","description":"","input":[{"name":"in","label":"Input","scopes":["a"],"id":"30622c8d-88ef-41fe-bc37-ba7ac6e39cb0-in"}],"output":[{"name":"out_true","label":"True","scopes":["a"],"id":"30622c8d-88ef-41fe-bc37-ba7ac6e39cb0-out_true"},{"name":"out_false","label":"False","scopes":["a"],"id":"30622c8d-88ef-41fe-bc37-ba7ac6e39cb0-out_false"}],"implementation":"ZenCsScriptWrapper","viewId":"Main","scope":"MainWorkflow","elementProperties":{"DEBUG":"0","SCRIPT_TEXT":"\n&lt;header&gt;\n    reference libs/algonia/cs/StockPrices&period;dll;\n    using Algonia;\n&lt;/header&gt;\n\n&lt;code run=&quot;true&quot;&gt;\n    // Get StockPrices object\n    var stockPricesObj = (StockPrices)get_result_raw(&quot;PRICES_OBJECT&quot;);\n    // Get stock prices\n    var prices = stockPricesObj&period;GetPrices();\n    // Save prices to current node\n    set_result(prices);\n&lt;/code&gt;","__ARG__":""},"file":"ZenCsScriptWrapper"},{"id":"e4dfba9d-f6c1-4e2a-a350-7932fabd024f","x":393.9375,"y":188,"width":250,"color":"#00b300","font_color":"white","border_color":"black","can_remove":true,"label":"SET_SYMBOL","description":"","input":[{"name":"in","label":"Input","scopes":["a"],"id":"e4dfba9d-f6c1-4e2a-a350-7932fabd024f-in"}],"output":[{"name":"out_true","label":"True","scopes":["a"],"id":"e4dfba9d-f6c1-4e2a-a350-7932fabd024f-out_true"},{"name":"out_false","label":"False","scopes":["a"],"id":"e4dfba9d-f6c1-4e2a-a350-7932fabd024f-out_false"}],"implementation":"ZenCsScriptWrapper","viewId":"Main","scope":"MainWorkflow","elementProperties":{"DEBUG":"0","SCRIPT_TEXT":"&lt;header&gt;\n    reference libs/algonia/cs/StockPrices&period;dll;\n    using Algonia;\n&lt;/header&gt;\n\n&lt;code run=&quot;true&quot;&gt;\n    \n    // Get StockPrices instance\n    var stockPrices = (StockPrices)get_result_raw(&quot;PRICES_OBJECT&quot;);\n    // Call ChangeSymbol function that sets new symbol\n    stockPrices&period;ChangeSymbol(get_element_arg());\n&lt;/code&gt;","__ARG__":""},"file":"ZenCsScriptWrapper"},{"id":"70199414-21be-475a-80bb-f0142b204e2b","x":564.3359375,"y":61,"width":250,"color":"#00b300","font_color":"white","border_color":"black","can_remove":true,"label":"PRICES_OBJECT","description":"","input":[{"name":"in","label":"Input","scopes":["a"],"id":"70199414-21be-475a-80bb-f0142b204e2b-in"}],"output":[{"name":"out_true","label":"True","scopes":["a"],"id":"70199414-21be-475a-80bb-f0142b204e2b-out_true"},{"name":"out_false","label":"False","scopes":["a"],"id":"70199414-21be-475a-80bb-f0142b204e2b-out_false"}],"implementation":"ZenCsScriptWrapper","viewId":"Main","scope":"MainWorkflow","elementProperties":{"DEBUG":"0","SCRIPT_TEXT":"&lt;header&gt;\n    reference libs/algonia/cs/StockPrices&period;dll;\n    using Algonia;\n&lt;/header&gt;\n\n&lt;code run=&quot;true&quot;&gt;\n    // Create new StockPrices instance\n    StockPrices stockPrices = new StockPrices(get_arg(&quot;API_KEY&quot;));\n    // Save it as result of current node\n    // This object will be available to all other nodes\n    set_result(stockPrices);\n&lt;/code&gt;","SCRIPT_ARGS":"[{&quot;name&quot;:&quot;API_KEY&quot;&comma;&quot;value&quot;:&quot;J3BWKH9YJ0MNBM79&quot;&comma;&quot;description&quot;:&quot;description 1&quot;}&comma;{&quot;name&quot;:&quot;Property 2&quot;&comma;&quot;value&quot;:&quot;Prop 2 val&quot;&comma;&quot;description&quot;:&quot;description 2&quot;}]","__ARG__":""},"file":"ZenCsScriptWrapper"},{"id":"1850451b-8c7a-4cbf-8d34-ff7273949c2b","x":538.1015625,"y":332,"width":250,"color":"#00b300","font_color":"white","border_color":"black","can_remove":true,"label":"SAVE_GRAPH","description":"","input":[{"name":"in","label":"Input","scopes":["a"],"id":"1850451b-8c7a-4cbf-8d34-ff7273949c2b-in"}],"output":[{"name":"out_true","label":"True","scopes":["a"],"id":"1850451b-8c7a-4cbf-8d34-ff7273949c2b-out_true"},{"name":"out_false","label":"False","scopes":["a"],"id":"1850451b-8c7a-4cbf-8d34-ff7273949c2b-out_false"}],"implementation":"ZenPython38","viewId":"Main","scope":"MainWorkflow","elementProperties":{"DEBUG":"0","PY_RESULT_TYPE":"1","PY_CLASS":"PlotGraph","PY_FUNCT":"plotGraph","PY_SCRIPT_TEXT":"import os\nimport algonia_helpers\nimport sys\nsys&period;path&period;append(os&period;getcwd())\nfrom libs&period;algonia&period;py&period;graphs import  plot_graph\nfrom io import StringIO\nimport sys\nimport webbrowser\n\nclass PlotGraph:\n       \n    def __init__(self&comma; arg: str):\n        # create new PlotGraph instance\n        global graph\n        graph = plot_graph&period;PlotGraph(&apos;&apos;)\n        \n    def plotGraph(self):\n        graphBase64 = &apos;&apos;\n        try:\n            stockData = StringIO(str(algonia_helpers&period;get_result_raw(&apos;GET_PRICES&apos;)))\n            \n            # call plotGraph function that returns graph image encoded as base64 string\n            graphBase64 = graph&period;plotGraph(stockData)\n            return graphBase64&period;decode(&apos;utf-8&apos;)\n            \n        except  Exception as inst:\n            print(&apos;error occured in SAVE_GRAPH&apos;)\n            print(inst)   \n            return &apos;&apos;\n        \n        ","PY_VERSION":"38","_LOOP_BLOCKER_":"0","__ARG__":""},"file":"ZenPython"}],"wires":[{"source":"7b119668-4c4e-42ed-b21a-e0d4ed4fa0cb-out_true","target":"70199414-21be-475a-80bb-f0142b204e2b-in"},{"source":"70199414-21be-475a-80bb-f0142b204e2b-out_true","target":"70e11a70-ec28-4252-8a86-001823cc7744-in"},{"source":"e4dfba9d-f6c1-4e2a-a350-7932fabd024f-out_true","target":"30622c8d-88ef-41fe-bc37-ba7ac6e39cb0-in"}]},"#TemplateName#"]